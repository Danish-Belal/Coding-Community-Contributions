//Leetcode ID : 938                                 Problem name : Range Sum of BST
//Level : Easy                                      

/**
* Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @param {number} low
 * @param {number} high
 * @return {number}
 */
function helper(root,arr){
    if(root==null){
        return ;
    }
   
    helper(root.left,arr);
        arr.push(root.val);
    helper(root.right,arr);
}
var rangeSumBST = function(root, low, high) {
    //using BST solve One Pass
    //inorder solution
    let arr = [];
     helper(root,arr);
    let sum = 0;
    for(let i=0;i<arr.length;i++){
        if(arr[i]>=low && arr[i]<=high){
            sum+=arr[i];
        }
    }
    return sum;
};
